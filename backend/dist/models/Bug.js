/**
 * BUG MODEL
 *
 * Defines the data structure and validation rules for Bug entities.
 * Bugs are the core entities that track software defects throughout their lifecycle.
 * They contain all information needed to report, track, and resolve issues.
 */
import { z } from "zod";
// Zod Schema for Bug validation and type safety
// Comprehensive validation ensures bug reports contain necessary information
export const bugSchema = z.object({
    // Primary key - auto-generated by database
    id: z.number().optional(),
    // Bug title - concise summary of the issue
    title: z.string().min(3, "Bug title must be at least 3 characters"),
    // Detailed description - steps to reproduce, expected vs actual behavior
    description: z.string().min(5, "Bug description must be detailed"),
    // Severity level - impacts priority and resource allocation
    severity: z.enum(["low", "medium", "high", "critical"]),
    // Current status in bug lifecycle - tracks progress toward resolution
    status: z.enum(["Open", "In Progress", "Resolved", "Closed"]).optional(),
    // User who reported the bug - references Users table
    reporterId: z.number(),
    // Assigned developer - references Users table, optional for initial reports
    developerId: z.number().optional(),
    // Project this bug belongs to - references Projects table
    projectId: z.number(),
    // Timestamp - automatically set when bug is created
    createdAt: z.date().optional(),
});
//# sourceMappingURL=Bug.js.map