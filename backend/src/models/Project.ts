/**
 * PROJECT MODEL
 *
 * Defines the data structure and validation rules for Project entities.
 * Projects serve as containers for organizing and grouping related bugs.
 * They help teams manage work on specific features or components.
 */

import { z } from "zod";

// Zod Schema for Project validation and type safety
// Ensures data integrity when creating or updating projects
export const projectSchema = z.object({
  // Primary key - auto-generated by database
  id: z.number().optional(),

  // Project name - must be descriptive and meet minimum length
  name: z.string().min(3, "Project name must be at least 3 characters long"),

  // Optional description - provides context about the project's purpose
  description: z.string().optional(),

  // Timestamp - automatically set when project is created
  createdAt: z.date().optional(),
});

// TypeScript Type inferred from Zod Schema
// Provides type safety for project-related operations
export type Project = z.infer<typeof projectSchema>;
